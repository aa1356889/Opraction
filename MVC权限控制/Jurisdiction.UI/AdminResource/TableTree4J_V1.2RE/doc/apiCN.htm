<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html>

<head>
	<title>TableTree4J API 说明</title>
	<meta http-equiv="Content-Type" content="text/html; charset=GBK"/>
	<script type="text/javascript" src="../TableTree4J.js"></script>
	<link rel="StyleSheet" href="../css/tabletree4j.css" type="text/css" />

</head>
<style>
.body {
font-size:14px;
}

.items{
color:#669999;
font-size:14px;		
}
.title{
font-size:16px;		
font-weight:bold;
color:#4E4E27;
border:#FF0000 solid;
border-width:0px 0px 1px;
}
.copyrightdiv{
font-size:12px;	
font-family:"Arial";
color:#C0C0C0;	
}

</style>
<body class="body">
<div style="font-size:25px;color:#993333;font-weight:bold">
			TableTree4J 1.1RE API
	<hr/>
</div>

<div>	
<span class="title">1.树的设置选项 Object: TableTree4J</span><br/><br/>
		<span class="items">设置选项说明：</span><br/>
		config.treeMode: 树的显示模式,值: "GRID"|"MENU"<br/>
		config.treeStyle: 树的样式,值: "GRIDTREESTYLE"|"MENUTREESTYLE"<br/>
		config.dafultTarget: 树的超链接默认目标,值: null|String <br/>
		config.rootNodeBtn: 根节点按钮是否显示,值: true|false<br/>
		config.folderAutoUrl: 可折叠节点是否自动加链接,值: true|false<br/>
		config.nodeHrefSelectBg: 选中的页节点是否加背景色高亮,值: true|false<br/>
		config.hrefOnfouceLine: 选中的超链接文字是否显示虚线边框,值: true|false<br/>
		config.hrefIconOnfouceLine: 选中的超链接图标是否显示虚线边框,值: true|false<br/>
		config.showTipTitle: 超链接是否显示提示,值: true|false<br/>
		config.showStatusText: 超链接是否显示状态栏提示,值: true|false<br/>
		config.inOrder: 节点是否排序,值: true|false<br/>
		config.useCookies: 节点是否使用cookies保存节点展开或关闭的状态,值: true|false<br/>
		config.cookieTime: 保存的cookie生存期,值: 30*24*60*60*1000<br/>
		config.useIcon: 节点是否使用图标,值: true|false<br/>
		config.useLine: 树是否显示连接节点的虚线,值: true|false<br/>
		config.booleanInitOpenAll: 树初始化时是否展开所有节点,值: true|false<br/>
		config.booleanHighLightRow: 高亮鼠标所在行,值: true|false<br/>
		config.highLightRowClassName: 高亮鼠标所在行使用的样式,值: "GridHighLightRow"<br/>
		setImgRootPath(path): 设置更改节点图标的根目录,参数: path 路径<br/><br/>
	<span class="items">表格模式和菜单模式下的树默认设置：</span>	
	<table border="1" width="100%" cellspacing="1" style="border-collapse: collapse" id="table1">
		<tr>
			<td bgcolor="#0000FF" width="50%" ><b><font color="#FFFFFF">设置</font></b></td>
			<td bgcolor="#0000FF" width="25%"><b><font color="#FFFFFF">表格模式</font></b></td>
			<td bgcolor="#0000FF" width="25%"><b><font color="#FFFFFF">菜单模式</font></b></td>
		</tr>
		<tr>
			<td>config.treeMode</td>
			<td align="center">&quot;GRID&quot;</td>
			<td align="center">&quot;MENU&quot;</td>
		</tr>
		<tr>
			<td>config.treeStyle</td>
			<td align="center">&quot;GRIDTREESTYLE&quot;</td>
			<td align="center">&quot;MENUTREESTYLE&quot;</td>
		</tr>
		<tr>
			<td>config.dafultTarget</td>
			<td align="center">null</td>
			<td align="center">null</td>
		</tr>
		<tr>
			<td>config.rootNodeBtn</td>
			<td align="center">true</td>
			<td align="center">false</td>
		</tr>
		<tr>
			<td>config.folderAutoUrl</td>
			<td align="center">false</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.nodeHrefSelectBg</td>
			<td align="center">false</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.hrefOnfouceLine</td>
			<td align="center">false</td>
			<td align="center">false</td>
		</tr>
		<tr>
			<td>config.hrefIconOnfouceLine</td>
			<td align="center">false</td>
			<td align="center">false</td>
		</tr>
		<tr>
			<td>config.showTipTitle</td>
			<td align="center">true</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.showStatusText</td>
			<td align="center">true</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.inOrder</td>
			<td align="center">true</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.useCookies</td>
			<td align="center">false</td>
			<td align="center">false</td>
		</tr>
		<tr>
			<td>config.useIcon</td>
			<td align="center">false</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.useLine</td>
			<td align="center">true</td>
			<td align="center">true</td>
		</tr>
		<tr>
			<td>config.booleanInitOpenAll</td>
			<td align="center">false</td>
			<td align="center">false</td>
		</tr>
		<tr>
			<td>config.booleanHighLightRow</td>
			<td align="center">true</td>
			<td align="center">false</td>
		</tr>		
	</table>

	
	
<br/><br/>	
<span class="title">2.树的函数及使用的变量 Object: TableTree4J</span><br/><br/>	
	<span class="items">调用的函数及变量说明：</span><br/>
	* new TableTree4J(objectName,rootPath): 树的构造函数 参数(实例化的名称,树的根目录):<br/>
	* tableDesc: 树的tableDesc变量，用于表格模式描述表格<br/>
	* setHeader(arrayHeader,id,headerWidthList,booleanOpen,classStyle,hrefTip,hrefStatusText,icon,iconOpen)<br/>
	表格模式设置表格头函数 参数(值数组,根id,宽度比数组,是否展开,css类名,超链接提示,超链接状态栏提示,关闭时的图标,打开时的图标)<br/>
	* gridHeaderColStyleArray: 定义表格头每一列的样式名集合<br/>
	* gridDataCloStyleArray: 定义表格数据每一列的样式名集合<br/>
	* addGirdNode(dataList,id,pid,booleanOpen,order,url,target,hrefTip,hrefStatusText,classStyle,icon,iconOpen):<br/>
	表格模式增加节点函数 参数(值数组,节点id,父节点id,是否打开,排序顺序,超链接,超链接目标框架,超链接提示,超链接状态栏提示,css类名,关闭时的图标,打开时的图标)<br/>
	* toMenuMode(): 菜单模式下的默认初始化<br/>
	* setMenuRoot(rootName,id,booleanOpen,classStyle,hrefTip,hrefStatusText,icon,iconOpen):<br/>
	菜单模式下设置菜单的根节点函数 参数(根节点名,根id,是否展开,css类名,超链接提示,超链接状态栏提示,关闭时的图标,打开时的图标)<br/>
	* addMenuNode(menuName,id,pid,booleanOpen,order,url,target,hrefTip,hrefStatusText,classStyle,icon,iconOpen):<br/>
	菜单模式下增加节点函数 参数(节点名,节点id,父节点id,是否打开,排序顺序,超链接,超链接目标框架,超链接提示,超链接状态栏提示,css类名,关闭时的图标,打开时的图标)<br/>
	* printTableTreeToElement(eleId): 树的打印函数,可在网页加载完毕后使用显示树 参数(要把树打印到指定的html标签元素的id)<br/>
	* printTableTree(): 树的打印函数,必须在网页加载没有完成的时候和网页一起初始化<br/>
	* findTreeNodeByMapId(nodeId): 根据节点id找到节点,返回一个节点Node的实例<br/> 
	* removeTreeCookies(): 清除树的cookies<br/> 	
	* openAllNodes(): 展开所有节点<br/> 
	* closeAllNodes(): 关闭所有节点<br/> 			
	<br/>
	
	<span class="items">建造一个表格树的基本流程：</span><br/>
	//初始化一个树<br/>
	var gridTree=new TableTree4J("gridTree","../");<br/>
	//设置表格描述<br/>
	gridTree.tableDesc="&lt;table border=\&quot;1\&quot; class=\&quot;GridView\&quot; width=\&quot;100%\&quot; id=\&quot;table1\&quot; 
cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; style=\&quot;border-collapse: collapse\&quot; 
bordercolordark=\&quot;#C0C0C0\&quot; bordercolorlight=\&quot;#C0C0C0\&quot; &gt;";	<br/>
	//如果要改变默认设置可在这里设置<br/>
	//gridTree.config.XXX=XXX;.....<br/>
	//设置表格头的值数组<br/>
	var headerDataList=new Array("模块名","创建时间","状态","操作");<br/>
	//设置表格的宽度数组<br/>
	var widthList=new Array("20%","40%","10%","30%");<br/>	
	//设置表格头<br/>
	gridTree.setHeader(headerDataList,id,widthList,true,"GridHead","This is a tipTitle of head href!","header status text","","");	<br/>	
	//定义表个头列样式集合<br/>
	gridTree.gridHeaderColStyleArray=new Array("","","","centerClo");<br/>
	//定义表数据主体的列样式集合<br/><br/>
	gridTree.gridDataCloStyleArray=new Array("","","","centerClo");<br/>	
	//添加节点,这里可通过不同的变成语言循环调用增加数组，如jsp,asp,php等等<br/>
		//节点值数组<br/>
	var dataList=new Array("系统管理","2007-12-10","使用中",".......");<br/>
		//添加节点<br/>
	gridTree.addGirdNode(dataList,1,-1,null,3,"#",null,"hello!","状态栏文字",null,null,null);<br/>
	......<br/>
	......<br/>
	//树的打印输出<br/>
	gridTree.printTableTreeToElement("DivId");<br/>
	//或者使用 	gridTree.printTableTree() 输出树<br/><br/>
	
	<span class="items">建造一个菜单树的基本流程：</span><br/>
	//初始化一个树<br/>
	var menuTree=new TableTree4J("menuTree","../");<br/>
	//菜单模式下的默认初始化
	menuTree.toMenuMode();
	//如果要改变默认设置可在这里设置,注意必须在toMenuMode()方法执行后<br/>
	//menuTree.config.XXX=XXX;.....<br/>
	//设置根节点菜单	<br/>
	menuTree.setMenuRoot("模块名",id,true,"MenuRoot","menu root href tip!","根状态栏文字","","");<br/>
	//添加菜单节点,这里可通过不同的变成语言循环调用增加数组，如jsp,asp,php等等<br/>		
	menuTree.addMenuNode("系统管理",1,-1,null,5,"#","_self","呵呵呵","",null,null,null);<br/>
	......<br/>
	......<br/>	
	//树的打印输出<br/>
	menuTree.printTableTreeToElement("DivId");<br/>
	//或者使用 	menuTree.printTableTree() 输出树<br/><br/>
	
		
<span class="title">3.节点类Node变量说明 Object: Node</span><br/><br/>	
	<span class="items">节点的变量：</span><br/>	
	dataList - 节点的值数组<br/>
	id - 节点的id<br/>
	pid - 节点的父节点id<br/>
	name - 节点名<br/>
	order - 节点的排序顺序<br/>
	icon - 节点关闭时的图标<br/>
	iconOpen - 节点打开时的图标<br/>
	classStyle - 节点的css类名<br/>
	url - 节点的url<br/>
	target - 节点的url目标框架<br/>
	hrefStatusText - 节点的状态栏提示<br/>
	booleanOpen - 节点是否打开状态<br/>
	hrefTip - 节点的url提示<br/>
	childNodes - 节点的一级直接点集合<br/>
	pNode - 节点的父节点对象<br/>
	level - 节点的层次<br/>
	visible - 节点是否可见<br/>
	cloBtnImg - 节点的关闭按钮图标<br/>
	opnBtnImg - 节点的展开按钮图标<br/>
	booleanRoot - 是否为根节点<br/>
    booleanLeaf - 是否为页节点<br/>
    booleanLastNode - 是否是父节点中最后一个节点<br/>
    htmlcode - 节点的html代码<br/><br/>	
	

<span class="title">4.CSS说明</span><br/><br/>	
	<span class="items">默认的CSS样式文件说明：</span><br/>	
	在默认的CSS文件中 GRIDTREESTYLE 项及其子项和 MENUTREESTYLE 项及其子项为js内部指定属性，名字不能修改.<br/>
	如果你要指定另外的CSS文件该文件必须有这两项及其子项.<br/>
	GRIDTREESTYLE : 该风格定义了表格模式的树除表头外的风格<br/>
	MENUTREESTYLE ：该风格定义了菜单模式的树除根节点外的风格<br/>
	
	*建议用户如果要自定义css按照默认css的模式还有沿用其命名，以达到最佳效果
	<br/><br/><br/>
	
</div>



		
<div class="copyrightdiv">				
		<p/>
		<p/>
		<div align="center">E-mail:lannerk@qq.com</div>
		<div align="center">Copyright (c) 2007-2008 xcode-studio</div>		
		<div align="center">TableTree4J version:1.1RE updata:2008.5.17</div>		
</div>
</body>
</html>		